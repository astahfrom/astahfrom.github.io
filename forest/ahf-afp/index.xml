<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/forest/default.xsl"?>
<fr:tree xmlns:fr="http://www.forester-notes.org" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:xml="http://www.w3.org/XML/1998/namespace" root="false" base-url="/forest/">
  <fr:frontmatter>
    <fr:authors />
    <fr:uri>https://astahfrom.github.io/forest/ahf-afp/</fr:uri>
    <fr:display-uri>ahf-afp</fr:display-uri>
    <fr:route>/forest/ahf-afp/</fr:route>
    <fr:title text="Entries in the Archive of Formal Proofs">Entries in the Archive of Formal Proofs</fr:title>
  </fr:frontmatter>
  <fr:mainmatter>
    <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
      <fr:frontmatter>
        <fr:authors>
          <fr:author>
            <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
          </fr:author>
        </fr:authors>
        <fr:date>
          <fr:year>2023</fr:year>
        </fr:date>
        <fr:uri>https://astahfrom.github.io/forest/ahfrom-2023-afp-synthetic-completeness/</fr:uri>
        <fr:display-uri>ahfrom-2023-afp-synthetic-completeness</fr:display-uri>
        <fr:route>/forest/ahfrom-2023-afp-synthetic-completeness/</fr:route>
        <fr:title text="Synthetic Completeness">Synthetic Completeness</fr:title>
        <fr:taxon>Reference</fr:taxon>
        <fr:meta name="external">https://isa-afp.org/entries/Synthetic_Completeness.html</fr:meta>
        <fr:meta name="venue">
          <fr:link href="/forest/afp/" title="Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/afp/" display-uri="afp" type="local">Archive of Formal Proofs</fr:link>
        </fr:meta>
        <fr:meta name="bibtex"><![CDATA[@article{Synthetic_Completeness-AFP,
abstract = {In this work, I provide an abstract framework for proving the completeness of a logical calculus using the synthetic method. The synthetic method is based on maximal consistent saturated sets (MCSs). A set of formulas is consistent (with respect to the calculus) when we cannot derive a contradiction from it. It is maximally consistent when it contains every formula that is consistent with it. For logics where it is relevant, it is saturated when it contains a witness for every existential formula. To prove completeness using these maximal consistent saturated sets, we prove a truth lemma: every formula in an MCS has a satisfying model. Here, Hintikka sets provide a useful stepping stone. These can be seen as characterizations of the MCSs based on simple subformula conditions rather than via the calculus. We then prove that every Hintikka set gives rise to a satisfying model and that MCSs are Hintikka sets. Now, assume a valid formula cannot be derived. Then its negation must be consistent and therefore satisfiable. This contradicts validity and the original formula must be derivable. To start, I build maximal consistent saturated sets for any logic that satisfies a small set of assumptions. I do this using a transfinite version of Lindenbaum's lemma, which allows me to support languages of any cardinality. I then prove useful abstract results about derivations and refutations as they relate to MCSs. Finally, I show how Hintikka sets can be derived from the logic's semantics, outlining one way to prove the required truth lemma. To demonstrate the versatility of the framework, I instantiate it with five different examples. The formalization contains soundness and completeness results for: a propositional tableau calculus, a propositional sequent calculus, an axiomatic system for modal logic, a labelled natural deduction system for hybrid logic and a natural deduction system for first-order logic. The tableau example uses custom Hintikka sets based on the calculus, but the other four examples derive them from the semantics in the style of the framework. The hybrid and first-order logic examples rely on saturated MCSs. This places requirements on the cardinalities of their languages to ensure that there are enough witnesses available. In both cases, the type of witnesses must be infinite and have cardinality at least that of the type of propositional/predicate symbols.},
author = {Asta Halkjær From},
issn = {2150-914x},
journal = {Archive of Formal Proofs},
month = {January},
title = {Synthetic Completeness},
url = {https://isa-afp.org/entries/Synthetic_Completeness.html},
year = {2023},
}]]></fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>In this work, I provide an abstract framework for proving the completeness of a logical calculus using the synthetic method. The synthetic method is based on maximal consistent saturated sets (MCSs). A set of formulas is consistent (with respect to the calculus) when we cannot derive a contradiction from it. It is maximally consistent when it contains every formula that is consistent with it. For logics where it is relevant, it is saturated when it contains a witness for every existential formula. To prove completeness using these maximal consistent saturated sets, we prove a truth lemma: every formula in an MCS has a satisfying model. Here, Hintikka sets provide a useful stepping stone. These can be seen as characterizations of the MCSs based on simple subformula conditions rather than via the calculus. We then prove that every Hintikka set gives rise to a satisfying model and that MCSs are Hintikka sets. Now, assume a valid formula cannot be derived. Then its negation must be consistent and therefore satisfiable. This contradicts validity and the original formula must be derivable. To start, I build maximal consistent saturated sets for any logic that satisfies a small set of assumptions. I do this using a transfinite version of Lindenbaum's lemma, which allows me to support languages of any cardinality. I then prove useful abstract results about derivations and refutations as they relate to MCSs. Finally, I show how Hintikka sets can be derived from the logic's semantics, outlining one way to prove the required truth lemma. To demonstrate the versatility of the framework, I instantiate it with five different examples. The formalization contains soundness and completeness results for: a propositional tableau calculus, a propositional sequent calculus, an axiomatic system for modal logic, a labelled natural deduction system for hybrid logic and a natural deduction system for first-order logic. The tableau example uses custom Hintikka sets based on the calculus, but the other four examples derive them from the semantics in the style of the framework. The hybrid and first-order logic examples rely on saturated MCSs. This places requirements on the cardinalities of their languages to ensure that there are enough witnesses available. In both cases, the type of witnesses must be infinite and have cardinality at least that of the type of propositional/predicate symbols.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
      <fr:frontmatter>
        <fr:authors>
          <fr:author>
            <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
          </fr:author>
        </fr:authors>
        <fr:date>
          <fr:year>2022</fr:year>
        </fr:date>
        <fr:uri>https://astahfrom.github.io/forest/ahfrom-2022-afp-naive/</fr:uri>
        <fr:display-uri>ahfrom-2022-afp-naive</fr:display-uri>
        <fr:route>/forest/ahfrom-2022-afp-naive/</fr:route>
        <fr:title text="A Naive Prover for First-Order Logic">A Naive Prover for First-Order Logic</fr:title>
        <fr:taxon>Reference</fr:taxon>
        <fr:meta name="external">https://isa-afp.org/entries/FOL_Seq_Calc3.html</fr:meta>
        <fr:meta name="venue">
          <fr:link href="/forest/afp/" title="Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/afp/" display-uri="afp" type="local">Archive of Formal Proofs</fr:link>
        </fr:meta>
        <fr:meta name="bibtex"><![CDATA[@article{FOL_Seq_Calc3-AFP,
abstract = { The AFP entry Abstract Completeness by Blanchette, Popescu and Traytel formalizes the core of Beth/Hintikka-style completeness proofs for first-order logic and can be used to formalize executable sequent calculus provers. In the Journal of Automated Reasoning, the authors instantiate the framework with a sequent calculus for first-order logic and prove its completeness. Their use of an infinite set of proof rules indexed by formulas yields very direct arguments. A fair stream of these rules controls the prover, making its definition remarkably simple. The AFP entry, however, only contains a toy example for propositional logic. The AFP entry A Sequent Calculus Prover for First-Order Logic with Functions by From and Jacobsen also uses the framework, but uses a finite set of generic rules resulting in a more sophisticated prover with more complicated proofs. This entry contains an executable sequent calculus prover for first-order logic with functions in the style presented by Blanchette et al. The prover can be exported to Haskell and this entry includes formalized proofs of its soundness and completeness. The proofs are simpler than those for the prover by From and Jacobsen but the performance of the prover is significantly worse. The included theory Fair-Stream first proves that the sequence of natural numbers 0, 0, 1, 0, 1, 2, etc. is fair. It then proves that mapping any surjective function across the sequence preserves fairness. This method of obtaining a fair stream of rules is similar to the one given by Blanchette et al. The concrete functions from natural numbers to terms, formulas and rules are defined using the Nat-Bijection theory in the HOL-Library. },
author = {Asta Halkjær From},
issn = {2150-914x},
journal = {Archive of Formal Proofs},
month = {March},
title = {A Naive Prover for First-Order Logic},
url = {https://isa-afp.org/entries/FOL_Seq_Calc3.html},
year = {2022},
}]]></fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>The AFP entry Abstract Completeness by Blanchette, Popescu and Traytel formalizes the core of Beth/Hintikka-style completeness proofs for first-order logic and can be used to formalize executable sequent calculus provers. In the Journal of Automated Reasoning, the authors instantiate the framework with a sequent calculus for first-order logic and prove its completeness. Their use of an infinite set of proof rules indexed by formulas yields very direct arguments. A fair stream of these rules controls the prover, making its definition remarkably simple. The AFP entry, however, only contains a toy example for propositional logic. The AFP entry A Sequent Calculus Prover for First-Order Logic with Functions by From and Jacobsen also uses the framework, but uses a finite set of generic rules resulting in a more sophisticated prover with more complicated proofs. This entry contains an executable sequent calculus prover for first-order logic with functions in the style presented by Blanchette et al. The prover can be exported to Haskell and this entry includes formalized proofs of its soundness and completeness. The proofs are simpler than those for the prover by From and Jacobsen but the performance of the prover is significantly worse. The included theory Fair-Stream first proves that the sequence of natural numbers 0, 0, 1, 0, 1, 2, etc. is fair. It then proves that mapping any surjective function across the sequence preserves fairness. This method of obtaining a fair stream of rules is similar to the one given by Blanchette et al. The concrete functions from natural numbers to terms, formulas and rules are defined using the Nat-Bijection theory in the HOL-Library.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
      <fr:frontmatter>
        <fr:authors>
          <fr:author>
            <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
          </fr:author>
          <fr:author>
            <fr:link href="/forest/fkjacobsen/" title="Frederik Krogsdal Jacobsen" uri="https://astahfrom.github.io/forest/fkjacobsen/" display-uri="fkjacobsen" type="local">Frederik Krogsdal Jacobsen</fr:link>
          </fr:author>
        </fr:authors>
        <fr:date>
          <fr:year>2022</fr:year>
        </fr:date>
        <fr:uri>https://astahfrom.github.io/forest/ahfrom-fkjacobsen-2022-afp-prover/</fr:uri>
        <fr:display-uri>ahfrom-fkjacobsen-2022-afp-prover</fr:display-uri>
        <fr:route>/forest/ahfrom-fkjacobsen-2022-afp-prover/</fr:route>
        <fr:title text="A Sequent Calculus Prover for First-Order Logic with Functions">A Sequent Calculus Prover for First-Order Logic with Functions</fr:title>
        <fr:taxon>Reference</fr:taxon>
        <fr:meta name="external">https://isa-afp.org/entries/FOL_Seq_Calc2.html</fr:meta>
        <fr:meta name="venue">
          <fr:link href="/forest/afp/" title="Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/afp/" display-uri="afp" type="local">Archive of Formal Proofs</fr:link>
        </fr:meta>
        <fr:meta name="bibtex"><![CDATA[@article{FOL_Seq_Calc2-AFP,
abstract = {We formalize an automated theorem prover for first-order logic with functions. The proof search procedure is based on sequent calculus and we verify its soundness and completeness using the Abstract Soundness and Abstract Completeness theories. Our analytic completeness proof covers both open and closed formulas. Since our deterministic prover considers only the subset of terms relevant to proving a given sequent, we do so as well when building a countermodel from a failed proof. We formally connect our prover with the proof system and semantics of the existing SeCaV system. In particular, the prover's output can be post-processed in Haskell to generate human-readable SeCaV proofs which are also machine-verifiable proof certificates. Paper: doi.org/10.4230/LIPIcs.ITP.2022.13.},
author = {Asta Halkjær From and Frederik Krogsdal Jacobsen},
issn = {2150-914x},
journal = {Archive of Formal Proofs},
month = {January},
title = {A Sequent Calculus Prover for First-Order Logic with Functions},
url = {https://isa-afp.org/entries/FOL_Seq_Calc2.html},
year = {2022},
}]]></fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>We formalize an automated theorem prover for first-order logic with functions. The proof search procedure is based on sequent calculus and we verify its soundness and completeness using the Abstract Soundness and Abstract Completeness theories. Our analytic completeness proof covers both open and closed formulas. Since our deterministic prover considers only the subset of terms relevant to proving a given sequent, we do so as well when building a countermodel from a failed proof. We formally connect our prover with the proof system and semantics of the existing SeCaV system. In particular, the prover's output can be post-processed in Haskell to generate human-readable SeCaV proofs which are also machine-verifiable proof certificates. Paper: doi.org/10.4230/LIPIcs.ITP.2022.13.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
      <fr:frontmatter>
        <fr:authors>
          <fr:author>
            <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
          </fr:author>
          <fr:author>
            <fr:link href="/forest/jvilladsen/" title="Jørgen Villadsen" uri="https://astahfrom.github.io/forest/jvilladsen/" display-uri="jvilladsen" type="local">Jørgen Villadsen</fr:link>
          </fr:author>
        </fr:authors>
        <fr:date>
          <fr:year>2022</fr:year>
        </fr:date>
        <fr:uri>https://astahfrom.github.io/forest/ahfrom-jvilladsen-2022-afp-implicational/</fr:uri>
        <fr:display-uri>ahfrom-jvilladsen-2022-afp-implicational</fr:display-uri>
        <fr:route>/forest/ahfrom-jvilladsen-2022-afp-implicational/</fr:route>
        <fr:title text="Soundness and Completeness of Implicational Logic">Soundness and Completeness of Implicational Logic</fr:title>
        <fr:taxon>Reference</fr:taxon>
        <fr:meta name="external">https://isa-afp.org/entries/Implicational_Logic.html</fr:meta>
        <fr:meta name="venue">
          <fr:link href="/forest/afp/" title="Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/afp/" display-uri="afp" type="local">Archive of Formal Proofs</fr:link>
        </fr:meta>
        <fr:meta name="bibtex"><![CDATA[@article{Implicational_Logic-AFP,
abstract = {This work is a formalization of soundness and completeness of the Bernays-Tarski axiom system for classical implicational logic. The completeness proof is constructive following the approach by László Kalmár, Elliott Mendelson and others. The result can be extended to full classical propositional logic by uncommenting a few lines for falsehood.},
author = {Asta Halkjær From and Jørgen Villadsen},
issn = {2150-914x},
journal = {Archive of Formal Proofs},
month = {September},
title = {Soundness and Completeness of Implicational Logic},
url = {https://isa-afp.org/entries/Implicational_Logic.html},
year = {2022},
}]]></fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>This work is a formalization of soundness and completeness of the Bernays-Tarski axiom system for classical implicational logic. The completeness proof is constructive following the approach by László Kalmár, Elliott Mendelson and others. The result can be extended to full classical propositional logic by uncommenting a few lines for falsehood.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
      <fr:frontmatter>
        <fr:authors>
          <fr:author>
            <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
          </fr:author>
        </fr:authors>
        <fr:date>
          <fr:year>2021</fr:year>
        </fr:date>
        <fr:uri>https://astahfrom.github.io/forest/ahfrom-2021-afp-pal/</fr:uri>
        <fr:display-uri>ahfrom-2021-afp-pal</fr:display-uri>
        <fr:route>/forest/ahfrom-2021-afp-pal/</fr:route>
        <fr:title text="Public Announcement Logic">Public Announcement Logic</fr:title>
        <fr:taxon>Reference</fr:taxon>
        <fr:meta name="external">https://isa-afp.org/entries/Public_Announcement_Logic.html</fr:meta>
        <fr:meta name="venue">
          <fr:link href="/forest/afp/" title="Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/afp/" display-uri="afp" type="local">Archive of Formal Proofs</fr:link>
        </fr:meta>
        <fr:meta name="bibtex"><![CDATA[@article{Public_Announcement_Logic-AFP,
abstract = {This work is a formalization of public announcement logic with countably many agents. It includes proofs of soundness and completeness for a variant of the axiom system PA + DIST! + NEC!. The completeness proof builds on the Epistemic Logic theory. Paper: doi.org/10.1007/978-3-030-90138-7\_2.},
author = {Asta Halkjær From},
issn = {2150-914x},
journal = {Archive of Formal Proofs},
month = {June},
title = {Public Announcement Logic},
url = {https://isa-afp.org/entries/Public_Announcement_Logic.html},
year = {2021},
}]]></fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>This work is a formalization of public announcement logic with countably many agents. It includes proofs of soundness and completeness for a variant of the axiom system PA + DIST! + NEC!. The completeness proof builds on the Epistemic Logic theory. Paper: doi.org/10.1007/978-3-030-90138-7_2.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
      <fr:frontmatter>
        <fr:authors>
          <fr:author>
            <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
          </fr:author>
        </fr:authors>
        <fr:date>
          <fr:year>2021</fr:year>
        </fr:date>
        <fr:uri>https://astahfrom.github.io/forest/ahfrom-2021-afp-axiomatic-fol/</fr:uri>
        <fr:display-uri>ahfrom-2021-afp-axiomatic-fol</fr:display-uri>
        <fr:route>/forest/ahfrom-2021-afp-axiomatic-fol/</fr:route>
        <fr:title text="Soundness and Completeness of an Axiomatic System for First-Order Logic">Soundness and Completeness of an Axiomatic System for First-Order Logic</fr:title>
        <fr:taxon>Reference</fr:taxon>
        <fr:meta name="external">https://isa-afp.org/entries/FOL_Axiomatic.html</fr:meta>
        <fr:meta name="venue">
          <fr:link href="/forest/afp/" title="Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/afp/" display-uri="afp" type="local">Archive of Formal Proofs</fr:link>
        </fr:meta>
        <fr:meta name="bibtex"><![CDATA[@article{FOL_Axiomatic-AFP,
abstract = {This work is a formalization of the soundness and completeness of an axiomatic system for first-order logic. The proof system is based on System Q1 by Smullyan and the completeness proof follows his textbook "First-Order Logic" (Springer-Verlag 1968). The completeness proof is in the Henkin style where a consistent set is extended to a maximal consistent set using Lindenbaum's construction and Henkin witnesses are added during the construction to ensure saturation as well. The resulting set is a Hintikka set which, by the model existence theorem, is satisfiable in the Herbrand universe. Paper: doi.org/10.4230/LIPIcs.TYPES.2021.8.},
author = {Asta Halkjær From},
issn = {2150-914x},
journal = {Archive of Formal Proofs},
month = {September},
title = {Soundness and Completeness of an Axiomatic System for First-Order Logic},
url = {https://isa-afp.org/entries/FOL_Axiomatic.html},
year = {2021},
}]]></fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>This work is a formalization of the soundness and completeness of an axiomatic system for first-order logic. The proof system is based on System Q1 by Smullyan and the completeness proof follows his textbook "First-Order Logic" (Springer-Verlag 1968). The completeness proof is in the Henkin style where a consistent set is extended to a maximal consistent set using Lindenbaum's construction and Henkin witnesses are added during the construction to ensure saturation as well. The resulting set is a Hintikka set which, by the model existence theorem, is satisfiable in the Herbrand universe. Paper: doi.org/10.4230/LIPIcs.TYPES.2021.8.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
      <fr:frontmatter>
        <fr:authors>
          <fr:author>
            <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
          </fr:author>
        </fr:authors>
        <fr:date>
          <fr:year>2019</fr:year>
        </fr:date>
        <fr:uri>https://astahfrom.github.io/forest/ahfrom-2019-afp-seqcalc-fol/</fr:uri>
        <fr:display-uri>ahfrom-2019-afp-seqcalc-fol</fr:display-uri>
        <fr:route>/forest/ahfrom-2019-afp-seqcalc-fol/</fr:route>
        <fr:title text="A Sequent Calculus for First-Order Logic">A Sequent Calculus for First-Order Logic</fr:title>
        <fr:taxon>Reference</fr:taxon>
        <fr:meta name="external">https://isa-afp.org/entries/FOL_Seq_Calc1.html</fr:meta>
        <fr:meta name="venue">
          <fr:link href="/forest/afp/" title="Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/afp/" display-uri="afp" type="local">Archive of Formal Proofs</fr:link>
        </fr:meta>
        <fr:meta name="bibtex"><![CDATA[@article{FOL_Seq_Calc1-AFP,
abstract = {This work formalizes soundness and completeness of a one-sided sequent calculus for first-order logic. The completeness is shown via a translation from a complete semantic tableau calculus, the proof of which is based on the First-Order Logic According to Fitting theory. The calculi and proof techniques are taken from Ben-Ari's Mathematical Logic for Computer Science. Paper: ceur-ws.org/Vol-3002/paper7.pdf.},
author = {Asta Halkjær From},
issn = {2150-914x},
journal = {Archive of Formal Proofs},
month = {July},
title = {A Sequent Calculus for First-Order Logic},
url = {https://isa-afp.org/entries/FOL_Seq_Calc1.html},
year = {2019},
}]]></fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>This work formalizes soundness and completeness of a one-sided sequent calculus for first-order logic. The completeness is shown via a translation from a complete semantic tableau calculus, the proof of which is based on the First-Order Logic According to Fitting theory. The calculi and proof techniques are taken from Ben-Ari's Mathematical Logic for Computer Science. Paper: ceur-ws.org/Vol-3002/paper7.pdf.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
      <fr:frontmatter>
        <fr:authors>
          <fr:author>
            <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
          </fr:author>
        </fr:authors>
        <fr:date>
          <fr:year>2019</fr:year>
        </fr:date>
        <fr:uri>https://astahfrom.github.io/forest/ahfrom-2019-afp-hybrid/</fr:uri>
        <fr:display-uri>ahfrom-2019-afp-hybrid</fr:display-uri>
        <fr:route>/forest/ahfrom-2019-afp-hybrid/</fr:route>
        <fr:title text="Formalizing a Seligman-Style Tableau System for Hybrid Logic">Formalizing a Seligman-Style Tableau System for Hybrid Logic</fr:title>
        <fr:taxon>Reference</fr:taxon>
        <fr:meta name="external">https://isa-afp.org/entries/Hybrid_Logic.html</fr:meta>
        <fr:meta name="venue">
          <fr:link href="/forest/afp/" title="Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/afp/" display-uri="afp" type="local">Archive of Formal Proofs</fr:link>
        </fr:meta>
        <fr:meta name="bibtex"><![CDATA[@article{Hybrid_Logic-AFP,
abstract = {This work is a formalization of soundness and completeness proofs for a Seligman-style tableau system for hybrid logic. The completeness result is obtained via a synthetic approach using maximally consistent sets of tableau blocks. The formalization differs from previous work in a few ways. First, to avoid the need to backtrack in the construction of a tableau, the formalized system has no unnamed initial segment, and therefore no Name rule. Second, I show that the full Bridge rule is admissible in the system. Third, I start from rules restricted to only extend the branch with new formulas, including only witnessing diamonds that are not already witnessed, and show that the unrestricted rules are admissible. Similarly, I start from simpler versions of the @-rules and show that these are sufficient. The GoTo rule is restricted using a notion of potential such that each application consumes potential and potential is earned through applications of the remaining rules. I show that if a branch can be closed then it can be closed starting from a single unit. Finally, Nom is restricted by a fixed set of allowed nominals. The resulting system should be terminating. Paper: doi.org/10.4230/LIPIcs.TYPES.2020.5.},
author = {Asta Halkjær From},
issn = {2150-914x},
journal = {Archive of Formal Proofs},
month = {December},
title = {Formalizing a Seligman-Style Tableau System for Hybrid Logic},
url = {https://isa-afp.org/entries/Hybrid_Logic.html},
year = {2019},
}]]></fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>This work is a formalization of soundness and completeness proofs for a Seligman-style tableau system for hybrid logic. The completeness result is obtained via a synthetic approach using maximally consistent sets of tableau blocks. The formalization differs from previous work in a few ways. First, to avoid the need to backtrack in the construction of a tableau, the formalized system has no unnamed initial segment, and therefore no Name rule. Second, I show that the full Bridge rule is admissible in the system. Third, I start from rules restricted to only extend the branch with new formulas, including only witnessing diamonds that are not already witnessed, and show that the unrestricted rules are admissible. Similarly, I start from simpler versions of the @-rules and show that these are sufficient. The GoTo rule is restricted using a notion of potential such that each application consumes potential and potential is earned through applications of the remaining rules. I show that if a branch can be closed then it can be closed starting from a single unit. Finally, Nom is restricted by a fixed set of allowed nominals. The resulting system should be terminating. Paper: doi.org/10.4230/LIPIcs.TYPES.2020.5.</html:p>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
      <fr:frontmatter>
        <fr:authors>
          <fr:author>
            <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
          </fr:author>
        </fr:authors>
        <fr:date>
          <fr:year>2018</fr:year>
        </fr:date>
        <fr:uri>https://astahfrom.github.io/forest/ahfrom-2018-afp-epistemic/</fr:uri>
        <fr:display-uri>ahfrom-2018-afp-epistemic</fr:display-uri>
        <fr:route>/forest/ahfrom-2018-afp-epistemic/</fr:route>
        <fr:title text="Epistemic Logic: Completeness of Modal Logics">Epistemic Logic: Completeness of Modal Logics</fr:title>
        <fr:taxon>Reference</fr:taxon>
        <fr:meta name="external">https://isa-afp.org/entries/Epistemic_Logic.html</fr:meta>
        <fr:meta name="venue">
          <fr:link href="/forest/afp/" title="Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/afp/" display-uri="afp" type="local">Archive of Formal Proofs</fr:link>
        </fr:meta>
        <fr:meta name="bibtex"><![CDATA[@article{Epistemic_Logic-AFP,
abstract = {This work is a formalization of epistemic logic. It includes proofs of soundness and completeness for the axiom system K. The completeness proof is based on the textbook "Reasoning About Knowledge" by Fagin, Halpern, Moses and Vardi (MIT Press 1995). The extensions of system K (T, KB, K4, S4, S5) and their completeness proofs are based on the textbook "Modal Logic" by Blackburn, de Rijke and Venema (Cambridge University Press 2001). Papers: doi.org/10.1007/978-3-030-88853-4\_1, doi.org/10.1007/978-3-030-90138-7\_2.},
author = {Asta Halkjær From},
issn = {2150-914x},
journal = {Archive of Formal Proofs},
month = {October},
title = {Epistemic Logic: Completeness of Modal Logics},
url = {https://isa-afp.org/entries/Epistemic_Logic.html},
year = {2018},
}]]></fr:meta>
      </fr:frontmatter>
      <fr:mainmatter>
        <html:p>This work is a formalization of epistemic logic. It includes proofs of soundness and completeness for the axiom system K. The completeness proof is based on the textbook "Reasoning About Knowledge" by Fagin, Halpern, Moses and Vardi (MIT Press 1995). The extensions of system K (T, KB, K4, S4, S5) and their completeness proofs are based on the textbook "Modal Logic" by Blackburn, de Rijke and Venema (Cambridge University Press 2001). Papers: doi.org/10.1007/978-3-030-88853-4_1, doi.org/10.1007/978-3-030-90138-7_2.</html:p>
      </fr:mainmatter>
    </fr:tree>
  </fr:mainmatter>
  <fr:backmatter>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="References">References</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Context">Context</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Backlinks">Backlinks</fr:title>
      </fr:frontmatter>
      <fr:mainmatter>
        <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
          <fr:frontmatter>
            <fr:authors>
              <fr:author>
                <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
              </fr:author>
            </fr:authors>
            <fr:uri>https://astahfrom.github.io/forest/index/</fr:uri>
            <fr:display-uri>index</fr:display-uri>
            <fr:route>/forest/index/</fr:route>
            <fr:title text="astahfrom.github.io">astahfrom.github.io</fr:title>
          </fr:frontmatter>
          <fr:mainmatter>
            <html:p>This page was built using <fr:link href="https://www.forester-notes.org/index/index.xml" type="external">Forester</fr:link>. Use <html:code>Ctrl-k</html:code> to find subpages.</html:p>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2025</fr:year>
                  <fr:month>4</fr:month>
                  <fr:day>15</fr:day>
                </fr:date>
                <fr:uri>https://astahfrom.github.io/forest/ahf-sdps/</fr:uri>
                <fr:display-uri>ahf-sdps</fr:display-uri>
                <fr:route>/forest/ahf-sdps/</fr:route>
                <fr:title text="Postdoc">Postdoc</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>I am a postdoc in <fr:link href="/forest/dtraytel/" title="Dmitriy Traytel" uri="https://astahfrom.github.io/forest/dtraytel/" display-uri="dtraytel" type="local">Dmitriy Traytel</fr:link>'s group in the section for Software, Data, People &amp; Society (SDPS) in the <fr:link href="/forest/diku/" title="Department of Computer Science" uri="https://astahfrom.github.io/forest/diku/" display-uri="diku" type="local">Department of Computer Science</fr:link> at the <fr:link href="/forest/ucph/" title="University of Copenhagen" uri="https://astahfrom.github.io/forest/ucph/" display-uri="ucph" type="local">University of Copenhagen</fr:link>. I am employed from August 2024 to August 2026. I teach Software Development for Digital Health for 4th semester Health and IT students.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2025</fr:year>
                  <fr:month>4</fr:month>
                  <fr:day>15</fr:day>
                </fr:date>
                <fr:uri>https://astahfrom.github.io/forest/ahf-dalux/</fr:uri>
                <fr:display-uri>ahf-dalux</fr:display-uri>
                <fr:route>/forest/ahf-dalux/</fr:route>
                <fr:title text="Dalux">Dalux</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>I was employed as a full-stack software developer at <fr:link href="/forest/dalux/" title="Dalux" uri="https://astahfrom.github.io/forest/dalux/" display-uri="dalux" type="local">Dalux</fr:link> from August 2023 to August 2024. I worked in C#, TypeScript and Angular. Besides completing tickets, I also:
<html:ul><html:li>refined the suite of concurrent, end-to-end Cypress tests,</html:li>
<html:li>improved the handling and stamping of PDFs,</html:li>
<html:li>wrote a Roslyn code analyzer to detect would-be runtime errors at compile time,</html:li>
<html:li>and worked on integrating full Angular template type checking.</html:li></html:ul></html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2025</fr:year>
                  <fr:month>4</fr:month>
                  <fr:day>15</fr:day>
                </fr:date>
                <fr:uri>https://astahfrom.github.io/forest/ahf-phd/</fr:uri>
                <fr:display-uri>ahf-phd</fr:display-uri>
                <fr:route>/forest/ahf-phd/</fr:route>
                <fr:title text="PhD">PhD</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>I was a PhD student at <fr:link href="/forest/dtucompute/" title="DTU Compute" uri="https://astahfrom.github.io/forest/dtucompute/" display-uri="dtucompute" type="local">DTU Compute</fr:link> from February 2020 to February 2023 working on <fr:link href="/forest/ahfrom-2023-phd-thesis/" title="Formally Correct Deduction Methods for Computational Logic" uri="https://astahfrom.github.io/forest/ahfrom-2023-phd-thesis/" display-uri="ahfrom-2023-phd-thesis" type="local">Formally Correct Deduction Methods for Computational Logic</fr:link>, especially using the proof assistant Isabelle/HOL. I was supervised by <fr:link href="/forest/jvilladsen/" title="Jørgen Villadsen" uri="https://astahfrom.github.io/forest/jvilladsen/" display-uri="jvilladsen" type="local">Jørgen Villadsen</fr:link> and co-supervised by <fr:link href="/forest/ngierasimczuk/" title="Nina Gierasimczuk" uri="https://astahfrom.github.io/forest/ngierasimczuk/" display-uri="ngierasimczuk" type="local">Nina Gierasimczuk</fr:link>. <fr:link href="/forest/dtu/" title="Technical University of Denmark" uri="https://astahfrom.github.io/forest/dtu/" display-uri="dtu" type="local">DTU</fr:link> granted me a Young Researcher Award for my PhD.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:date>
                  <fr:year>2025</fr:year>
                  <fr:month>4</fr:month>
                  <fr:day>15</fr:day>
                </fr:date>
                <fr:uri>https://astahfrom.github.io/forest/ahf-bscmsc/</fr:uri>
                <fr:display-uri>ahf-bscmsc</fr:display-uri>
                <fr:route>/forest/ahf-bscmsc/</fr:route>
                <fr:title text="BSc and MSc">BSc and MSc</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <html:p>I was a <fr:link href="/forest/ahfrom-2020-msc-thesis/" title="Hybrid Logic" uri="https://astahfrom.github.io/forest/ahfrom-2020-msc-thesis/" display-uri="ahfrom-2020-msc-thesis" type="local">MSc</fr:link> student on the Honours Programme in Computer Science and Engineering at <fr:link href="/forest/dtu/" title="Technical University of Denmark" uri="https://astahfrom.github.io/forest/dtu/" display-uri="dtu" type="local">DTU</fr:link> from 2018 to 2020 and a <fr:link href="/forest/ahfrom-2017-bsc-thesis/" title="Formalized First-Order Logic" uri="https://astahfrom.github.io/forest/ahfrom-2017-bsc-thesis/" display-uri="ahfrom-2017-bsc-thesis" type="local">BSc</fr:link> student in Software Technology at <fr:link href="/forest/dtu/" title="Technical University of Denmark" uri="https://astahfrom.github.io/forest/dtu/" display-uri="dtu" type="local">DTU</fr:link> from 2014 to 2018.</html:p>
              </fr:mainmatter>
            </fr:tree>
            <html:p>You might be looking for my <fr:link href="../cartouches/" type="external">Isabelle snippets generator</fr:link> or my <fr:link href="../htmlbib/" type="external">online bibliography templating tool</fr:link>.</html:p>
            <html:p>You might also be looking for a <fr:link href="/forest/ahf-writing/" title="Writing" uri="https://astahfrom.github.io/forest/ahf-writing/" display-uri="ahf-writing" type="local">complete list of my articles</fr:link>, an <fr:link href="/forest/ahf-talks/" title="Talks" uri="https://astahfrom.github.io/forest/ahf-talks/" display-uri="ahf-talks" type="local">overview of other talks</fr:link>, or <fr:link href="/forest/ahf-afp/" title="Entries in the Archive of Formal Proofs" uri="https://astahfrom.github.io/forest/ahf-afp/" display-uri="ahf-afp" type="local">a list of my entries in the Archive of Formal Proofs</fr:link></html:p>
            <fr:tree show-metadata="false">
              <fr:frontmatter>
                <fr:authors>
                  <fr:author>
                    <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                  </fr:author>
                </fr:authors>
                <fr:title text="Recent Work">Recent Work</fr:title>
              </fr:frontmatter>
              <fr:mainmatter>
                <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:date>
                      <fr:year>2025</fr:year>
                    </fr:date>
                    <fr:uri>https://astahfrom.github.io/forest/ahfrom-2025-cpp/</fr:uri>
                    <fr:display-uri>ahfrom-2025-cpp</fr:display-uri>
                    <fr:route>/forest/ahfrom-2025-cpp/</fr:route>
                    <fr:title text="An Isabelle/HOL Framework for Synthetic Completeness Proofs">An Isabelle/HOL Framework for Synthetic Completeness Proofs</fr:title>
                    <fr:taxon>Reference</fr:taxon>
                    <fr:meta name="doi">10.1145/3703595.3705882</fr:meta>
                    <fr:meta name="venue">In K. Stark et al (ed.) Proceedings of the 14th ACM SIGPLAN International Conference on Certified Programs and Proofs (CPP 2025)</fr:meta>
                    <fr:meta name="slides">/forest/bafkrmig7aq7xnj4hn3sqzld7unlsy5kttfe7gpaw6drrn3ro64o3nrhluq.pdf</fr:meta>
                    <fr:meta name="bibtex"><![CDATA[@inproceedings{DBLP:conf/cpp/From25,
abstract = {Proof assistants like Isabelle/HOL provide the perfect opportunity to develop more than just one-off formalizations, but frameworks for developing new results within a given area. Completeness results for logical calculi often include bespoke versions of Lindenbaum's lemma. In this paper, I mechanize an abstract, transfinite version of the lemma and use it to build witnessed, maximal consistent sets (MCSs) for any notion of consistency that satisfies a few requirements. I prove abstract results about when MCSs reflect the proof rules of the underlying calculi. Finally, I formalize a process for mechanically calculating saturated set conditions from a given logic's semantics. This separates the truth lemma that connects MCS-membership and satisfiability into semantic and syntactic components, giving concrete proof obligations for each operator of the logic. To illustrate the framework's applicability, I instantiate it with propositional, first-order, modal and hybrid logic examples. I mechanize strong completeness for each logic, even for uncountably large languages, proving that, if a formula is valid under a set of assumptions, then we can derive it from a finite subset.},
author = {Asta Halkj{æ}r From},
booktitle = {Proceedings of the 14th {ACM} {SIGPLAN} International Conference on Certified Programs and Proofs, {CPP} 2025, Denver, CO, USA, January 20-21, 2025},
doi = {10.1145/3703595.3705882},
editor = {Kathrin Stark and Amin Timany and Sandrine Blazy and Nicolas Tabareau},
pages = {171--186},
publisher = {{ACM}},
title = {An Isabelle/HOL Framework for Synthetic Completeness Proofs},
year = {2025},
}]]></fr:meta>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Proof assistants like Isabelle/HOL provide the perfect opportunity to develop more than just one-off formalizations, but frameworks for developing new results within a given area. Completeness results for logical calculi often include bespoke versions of Lindenbaum's lemma. In this paper, I mechanize an abstract, transfinite version of the lemma and use it to build witnessed, maximal consistent sets (MCSs) for any notion of consistency that satisfies a few requirements. I prove abstract results about when MCSs reflect the proof rules of the underlying calculi. Finally, I formalize a process for mechanically calculating saturated set conditions from a given logic's semantics. This separates the truth lemma that connects MCS-membership and satisfiability into semantic and syntactic components, giving concrete proof obligations for each operator of the logic. To illustrate the framework's applicability, I instantiate it with propositional, first-order, modal and hybrid logic examples. I mechanize strong completeness for each logic, even for uncountably large languages, proving that, if a formula is valid under a set of assumptions, then we can derive it from a finite subset.</html:p>
                    <html:p>
                      <fr:link href="/forest/ahfrom-2023-afp-synthetic-completeness/" title="Synthetic Completeness" uri="https://astahfrom.github.io/forest/ahfrom-2023-afp-synthetic-completeness/" display-uri="ahfrom-2023-afp-synthetic-completeness" type="local" />
                    </html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:date>
                      <fr:year>2024</fr:year>
                    </fr:date>
                    <fr:uri>https://astahfrom.github.io/forest/ahfrom-2024-jlc-wollic/</fr:uri>
                    <fr:display-uri>ahfrom-2024-jlc-wollic</fr:display-uri>
                    <fr:route>/forest/ahfrom-2024-jlc-wollic/</fr:route>
                    <fr:title text="Formalized Soundness and Completeness of Epistemic and Public Announcement Logic">Formalized Soundness and Completeness of Epistemic and Public Announcement Logic</fr:title>
                    <fr:taxon>Reference</fr:taxon>
                    <fr:meta name="doi">10.1093/logcom/exae054</fr:meta>
                    <fr:meta name="venue">Journal of Logic and Computation</fr:meta>
                    <fr:meta name="bibtex"><![CDATA[@article{From24,
abstract = {{I strengthen the foundations of epistemic logic by formalizing the family of normal modal logics in the proof assistant Isabelle/HOL. I define an abstract canonical model over any set of axioms and formalize completeness-via-canonicity: when the canonical model for the chosen axioms belongs to a certain class of frames, strong completeness over that class follows immediately. I instantiate the result with logics based on various epistemic principles to obtain completeness results for systems from K to S5. I then move to a family of public announcement logics (PAL) and prove abstract results for strong soundness and completeness. I lift the completeness results from epistemic logic to the setting with public announcements in a modular way. This work formulates the completeness-via-canonicity technique as a proper theorem and demonstrates its applicability. Additionally, it succinctly formalizes the requirements for lifting completeness from bare epistemic logic to the addition of public announcements.}},
author = {From, Asta Halkjær},
doi = {10.1093/logcom/exae054},
issn = {0955-792X},
journal = {Journal of Logic and Computation},
month = {09},
title = {{Formalized Soundness and Completeness of Epistemic and Public Announcement Logic}},
year = {2024},
}]]></fr:meta>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>I strengthen the foundations of epistemic logic by formalizing the family of normal modal logics in the proof assistant Isabelle/HOL. I define an abstract canonical model over any set of axioms and formalize completeness-via-canonicity: when the canonical model for the chosen axioms belongs to a certain class of frames, strong completeness over that class follows immediately. I instantiate the result with logics based on various epistemic principles to obtain completeness results for systems from K to S5. I then move to a family of public announcement logics (PAL) and prove abstract results for strong soundness and completeness. I lift the completeness results from epistemic logic to the setting with public announcements in a modular way. This work formulates the completeness-via-canonicity technique as a proper theorem and demonstrates its applicability. Additionally, it succinctly formalizes the requirements for lifting completeness from bare epistemic logic to the addition of public announcements.</html:p>
                    <html:p>
                      <fr:link href="/forest/ahfrom-2021-afp-pal/" title="Public Announcement Logic" uri="https://astahfrom.github.io/forest/ahfrom-2021-afp-pal/" display-uri="ahfrom-2021-afp-pal" type="local" />
                    </html:p>
                    <html:p>
                      <fr:link href="/forest/ahfrom-2018-afp-epistemic/" title="Epistemic Logic: Completeness of Modal Logics" uri="https://astahfrom.github.io/forest/ahfrom-2018-afp-epistemic/" display-uri="ahfrom-2018-afp-epistemic" type="local" />
                    </html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                      </fr:author>
                      <fr:author>
                        <fr:link href="/forest/fkjacobsen/" title="Frederik Krogsdal Jacobsen" uri="https://astahfrom.github.io/forest/fkjacobsen/" display-uri="fkjacobsen" type="local">Frederik Krogsdal Jacobsen</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:date>
                      <fr:year>2024</fr:year>
                    </fr:date>
                    <fr:uri>https://astahfrom.github.io/forest/ahfrom-fkjacobsen-2024-jar/</fr:uri>
                    <fr:display-uri>ahfrom-fkjacobsen-2024-jar</fr:display-uri>
                    <fr:route>/forest/ahfrom-fkjacobsen-2024-jar/</fr:route>
                    <fr:title text="Verifying a Sequent Calculus Prover for First-Order Logic with Functions in Isabelle/HOL">Verifying a Sequent Calculus Prover for First-Order Logic with Functions in Isabelle/HOL</fr:title>
                    <fr:taxon>Reference</fr:taxon>
                    <fr:meta name="doi">10.1007/s10817-024-09697-3</fr:meta>
                    <fr:meta name="venue">Journal of Automated Reasoning 68(15)</fr:meta>
                    <fr:meta name="bibtex"><![CDATA[@article{FromJ24,
abstract = {We describe the design, implementation and verification of an automated theorem prover for first-order logic with functions. The proof search procedure is based on sequent calculus and we formally verify its soundness and completeness in Isabelle/HOL using an existing abstract framework for coinductive proof trees. Our analytic completeness proof covers both open and closed formulas. Since our deterministic prover considers only the subset of terms relevant to proving a given sequent, we do so as well when building a countermodel from a failed proof. Finally, we formally connect our prover with the proof system and semantics of the existing SeCaV system. In particular, the prover can generate human-readable SeCaV proofs which are also machine-verifiable proof certificates.},
author = {Asta Halkj{æ}r From and Frederik Krogsdal Jacobsen},
doi = {10.1007/s10817-024-09697-3},
journal = {Journal of Automated Reasoning},
number = {15},
publisher = {Springer},
title = {Verifying a Sequent Calculus Prover for First-Order Logic with Functions in {Isabelle/HOL}},
volume = {68},
year = {2024},
}]]></fr:meta>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>We describe the design, implementation and verification of an automated theorem prover for first-order logic with functions. The proof search procedure is based on sequent calculus and we formally verify its soundness and completeness in Isabelle/HOL using an existing abstract framework for coinductive proof trees. Our analytic completeness proof covers both open and closed formulas. Since our deterministic prover considers only the subset of terms relevant to proving a given sequent, we do so as well when building a countermodel from a failed proof. Finally, we formally connect our prover with the proof system and semantics of the existing SeCaV system. In particular, the prover can generate human-readable SeCaV proofs which are also machine-verifiable proof certificates.</html:p>
                    <html:p>
                      <fr:link href="/forest/ahfrom-fkjacobsen-2022-afp-prover/" title="A Sequent Calculus Prover for First-Order Logic with Functions" uri="https://astahfrom.github.io/forest/ahfrom-fkjacobsen-2022-afp-prover/" display-uri="ahfrom-fkjacobsen-2022-afp-prover" type="local" />
                    </html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:date>
                      <fr:year>2023</fr:year>
                      <fr:month>3</fr:month>
                      <fr:day>17</fr:day>
                    </fr:date>
                    <fr:uri>https://astahfrom.github.io/forest/ahfrom-2023-talk-clg/</fr:uri>
                    <fr:display-uri>ahfrom-2023-talk-clg</fr:display-uri>
                    <fr:route>/forest/ahfrom-2023-talk-clg/</fr:route>
                    <fr:title text="A Cute Trick for Calculating Saturated Sets">A Cute Trick for Calculating Saturated Sets</fr:title>
                    <fr:taxon>Reference</fr:taxon>
                    <fr:meta name="venue">Copenhagen Logic Gathering</fr:meta>
                    <fr:meta name="slides">/forest/bafkrmigo6jbqscqdbxyvnap7lbnh5dntbow4fltfber62mtd5fvodtrhj4.pdf</fr:meta>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>I present part of my <fr:link href="/forest/ahfrom-2023-phd-thesis/" title="Formally Correct Deduction Methods for Computational Logic" uri="https://astahfrom.github.io/forest/ahfrom-2023-phd-thesis/" display-uri="ahfrom-2023-phd-thesis" type="local">PhD thesis</fr:link> on calculating saturated set conditions for each operator of a logic.</html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:date>
                      <fr:year>2023</fr:year>
                      <fr:month>1</fr:month>
                      <fr:day>31</fr:day>
                    </fr:date>
                    <fr:uri>https://astahfrom.github.io/forest/ahfrom-2023-phd-thesis/</fr:uri>
                    <fr:display-uri>ahfrom-2023-phd-thesis</fr:display-uri>
                    <fr:route>/forest/ahfrom-2023-phd-thesis/</fr:route>
                    <fr:title text="Formally Correct Deduction Methods for Computational Logic">Formally Correct Deduction Methods for Computational Logic</fr:title>
                    <fr:taxon>Reference</fr:taxon>
                    <fr:meta name="venue">PhD thesis, Technical University of Denmark</fr:meta>
                    <fr:meta name="slides">/forest/bafkrmihlakseuvtsrtlywgufu6u7td4va5ezlfnlvwapqbfekcjubtxee4.pdf</fr:meta>
                    <fr:meta name="external">/forest/bafkrmia3dddrsbaogkrwfwjc3i4f3vdjhq6rlnoziegwyk5veymmgzlnfa.pdf</fr:meta>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>Advisors: <fr:link href="/forest/jvilladsen/" title="Jørgen Villadsen" uri="https://astahfrom.github.io/forest/jvilladsen/" display-uri="jvilladsen" type="local">Jørgen Villadsen</fr:link> and <fr:link href="/forest/ngierasimczuk/" title="Nina Gierasimczuk" uri="https://astahfrom.github.io/forest/ngierasimczuk/" display-uri="ngierasimczuk" type="local">Nina Gierasimczuk</fr:link>.</html:p>
                    <html:p>Some logics make it easier to say what we want than others and some methods of deduction are simpler to work with than others. One thing typically remains important: that we can deduce all valid things (completeness). In this thesis I tackle completeness of various deduction methods for various logics. The work is formalized in the proof assistant Isabelle/HOL which offers a common language for mathematics and computer science where proofs can be checked mechanically. This thesis discusses the following contributions of my PhD project in particular:
<html:ul><html:li><fr:link href="/forest/ahfrom-2021-esslli/" title="Formalizing Henkin-Style Completeness of an Axiomatic System for Propositional Logic" uri="https://astahfrom.github.io/forest/ahfrom-2021-esslli/" display-uri="ahfrom-2021-esslli" type="local">A historical overview of formalized completeness proofs and a formalization that explains the essence of synthetic completeness proofs.</fr:link></html:li>
<html:li><fr:link href="/forest/ahfrom-2021-types/" title="A Succinct Formalization of the Completeness of First-Order Logic" uri="https://astahfrom.github.io/forest/ahfrom-2021-types/" display-uri="ahfrom-2021-types" type="local">A formalization of a concise completeness proof for first-order logic in Isabelle/HOL, including solutions to the issues of formalizing quantifiers and proving completeness for formulas with free variables.</fr:link></html:li>
<html:li><fr:link href="/forest/ahfrom-fkjacobsen-2022-itp/" title="Verifying a Sequent Calculus Prover for First-Order Logic with Functions in Isabelle/HOL" uri="https://astahfrom.github.io/forest/ahfrom-fkjacobsen-2022-itp/" display-uri="ahfrom-fkjacobsen-2022-itp" type="local">A verified prover for first-order logic with functions, with a formalized completeness proof that takes the search strategy of the prover into account.</fr:link></html:li>
<html:li><fr:link href="/forest/ahfrom-2020-types/" title="Synthetic Completeness for a Terminating Seligman-Style Tableau System" uri="https://astahfrom.github.io/forest/ahfrom-2020-types/" display-uri="ahfrom-2020-types" type="local">A synthetic completeness proof for a tableau system for basic hybrid logic which is both terminating and in the Seligman style where the proof rules reflect the local perspective that modal logic is based on.</fr:link></html:li>
<html:li><fr:link href="/forest/ahfrom-2024-jlc-wollic/" title="Formalized Soundness and Completeness of Epistemic and Public Announcement Logic" uri="https://astahfrom.github.io/forest/ahfrom-2024-jlc-wollic/" display-uri="ahfrom-2024-jlc-wollic" type="local">Formalized soundness and completeness results for epistemic and public announcement logic, instantiated to a range of concrete axiom systems.</fr:link></html:li>
<html:li><fr:link href="/forest/jlimperg-ahfrom-2023-cpp/" title="Aesop: White-Box Best-First Proof Search for Lean" uri="https://astahfrom.github.io/forest/jlimperg-ahfrom-2023-cpp/" display-uri="jlimperg-ahfrom-2023-cpp" type="local">A best-first proof search tactic for the proof assistant Lean 4.</fr:link></html:li>
<html:li><fr:link href="/forest/ahfrom-2025-cpp/" title="An Isabelle/HOL Framework for Synthetic Completeness Proofs" uri="https://astahfrom.github.io/forest/ahfrom-2025-cpp/" display-uri="ahfrom-2025-cpp" type="local">An abstract framework for synthetic completeness proofs.</fr:link></html:li></html:ul></html:p>
                  </fr:mainmatter>
                </fr:tree>
                <fr:tree show-metadata="true" expanded="false" toc="false" numbered="false">
                  <fr:frontmatter>
                    <fr:authors>
                      <fr:author>
                        <fr:link href="/forest/jlimperg/" title="Jannis Limperg" uri="https://astahfrom.github.io/forest/jlimperg/" display-uri="jlimperg" type="local">Jannis Limperg</fr:link>
                      </fr:author>
                      <fr:author>
                        <fr:link href="/forest/ahfrom/" title="Asta Halkjær From" uri="https://astahfrom.github.io/forest/ahfrom/" display-uri="ahfrom" type="local">Asta Halkjær From</fr:link>
                      </fr:author>
                    </fr:authors>
                    <fr:date>
                      <fr:year>2023</fr:year>
                    </fr:date>
                    <fr:uri>https://astahfrom.github.io/forest/jlimperg-ahfrom-2023-cpp/</fr:uri>
                    <fr:display-uri>jlimperg-ahfrom-2023-cpp</fr:display-uri>
                    <fr:route>/forest/jlimperg-ahfrom-2023-cpp/</fr:route>
                    <fr:title text="Aesop: White-Box Best-First Proof Search for Lean">Aesop: White-Box Best-First Proof Search for Lean</fr:title>
                    <fr:taxon>Reference</fr:taxon>
                    <fr:meta name="doi">10.1145/3573105.3575671</fr:meta>
                    <fr:meta name="venue">In R. Krebbers et al (ed.) Proceedings of the 12th ACM SIGPLAN International Conference on Certified Programs and Proofs (CPP 2023)</fr:meta>
                    <fr:meta name="bibtex"><![CDATA[@inproceedings{LimpergF23,
abstract = {We present Aesop, a proof search tactic for the Lean 4 interactive theorem prover. Aesop performs a tree-based search over a user-specified set of proof rules. It supports safe and unsafe rules and uses a best-first search strategy with customisable prioritisation. Aesop also allows users to register custom normalisation rules and integrates Lean's simplifier to support equational reasoning. Many details of Aesop's search procedure are designed to make it a white-box proof automation tactic, meaning that users should be able to easily predict how their rules will be applied, and thus how powerful and fast their Aesop invocations will be. Since we use a best-first search strategy, it is not obvious how to handle metavariables which appear in multiple goals. The most common strategy for dealing with metavariables relies on backtracking and is therefore not suitable for best-first search. We give an algorithm which addresses this issue. The algorithm works with any search strategy, is independent of the underlying logic and makes few assumptions about how rules interact with metavariables. We conjecture that with a fair search strategy, the algorithm is as complete as the given set of rules allows.},
author = {Jannis Limperg and Asta Halkj{æ}r From},
booktitle = {Proceedings of the 12th {ACM} {SIGPLAN} International Conference on Certified Programs and Proofs, {CPP} 2023, Boston, MA, USA, January 16-17, 2023},
doi = {10.1145/3573105.3575671},
editor = {Robbert Krebbers and Dmitriy Traytel and Brigitte Pientka and Steve Zdancewic},
pages = {253--266},
publisher = {{ACM}},
title = {Aesop: White-Box Best-First Proof Search for Lean},
year = {2023},
}]]></fr:meta>
                  </fr:frontmatter>
                  <fr:mainmatter>
                    <html:p>We present Aesop, a proof search tactic for the Lean 4 interactive theorem prover. Aesop performs a tree-based search over a user-specified set of proof rules. It supports safe and unsafe rules and uses a best-first search strategy with customisable prioritisation. Aesop also allows users to register custom normalisation rules and integrates Lean's simplifier to support equational reasoning. Many details of Aesop's search procedure are designed to make it a white-box proof automation tactic, meaning that users should be able to easily predict how their rules will be applied, and thus how powerful and fast their Aesop invocations will be. Since we use a best-first search strategy, it is not obvious how to handle metavariables which appear in multiple goals. The most common strategy for dealing with metavariables relies on backtracking and is therefore not suitable for best-first search. We give an algorithm which addresses this issue. The algorithm works with any search strategy, is independent of the underlying logic and makes few assumptions about how rules interact with metavariables. We conjecture that with a fair search strategy, the algorithm is as complete as the given set of rules allows.</html:p>
                  </fr:mainmatter>
                </fr:tree>
              </fr:mainmatter>
            </fr:tree>
          </fr:mainmatter>
        </fr:tree>
      </fr:mainmatter>
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Related">Related</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
    <fr:tree show-metadata="false" hidden-when-empty="true">
      <fr:frontmatter>
        <fr:authors />
        <fr:title text="Contributions">Contributions</fr:title>
      </fr:frontmatter>
      <fr:mainmatter />
    </fr:tree>
  </fr:backmatter>
</fr:tree>
